type Post {
  id: ID!
  title: String!
  content: String!
  allowComments: Boolean!
  comments(first: Int, after: String): CommentConnection!
}

type CommentConnection {
  edges: [CommentEdge!]!
  pageInfo: PageInfo!
}

type CommentEdge {
  cursor: String!
  node: Comment!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
}

type Comment {
  id: ID!
  postId: ID!
  parentId: ID
  content: String!
  createdAt: String!
  replies(first: Int, after: String): CommentConnection!
}

type Query {
  posts(first: Int, after: String): PostConnection!
}

type PostConnection {
  edges: [PostEdge!]!
  pageInfo: PageInfo!
}

type PostEdge {
  cursor: String!
  node: Post!
}

type Mutation {
  createPost(title: String!, content: String!, allowComments: Boolean!): Post!
  createComment(postId: ID!, content: String!, parentId: ID): Comment!
  createReply(postId: ID!, parentId: ID!, content: String!): Comment!
}

type Subscription {
  commentAdded(postId: ID!): Comment!
}